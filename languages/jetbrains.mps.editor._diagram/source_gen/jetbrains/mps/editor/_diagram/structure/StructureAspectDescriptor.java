package jetbrains.mps.editor._diagram.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.AbstractArgument").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
      case 1:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.AbstractFigureArgument").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
      case 2:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.AbstractFigureReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"arguments"}, new boolean[]{true}).abstract_().create();
      case 3:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.AttributedFigureReference").super_("jetbrains.mps.editor._diagram.structure.AbstractFigureReference").parents("jetbrains.mps.editor._diagram.structure.AbstractFigureReference").references("figureAttribute").create();
      case 4:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.BLQueryArgument").super_("jetbrains.mps.editor._diagram.structure.AbstractFigureArgument").parents("jetbrains.mps.editor._diagram.structure.AbstractFigureArgument").children(new String[]{"query"}, new boolean[]{false}).create();
      case 5:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.CellModel_Diagram").super_("jetbrains.mps.lang.editor.structure.EditorCellModel").parents("jetbrains.mps.lang.editor.structure.EditorCellModel").children(new String[]{"diagramElements"}, new boolean[]{true}).alias("diagram", "").create();
      case 6:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.CellModel_DiagramConnector").super_("jetbrains.mps.lang.editor.structure.EditorCellModel").parents("jetbrains.mps.lang.editor.structure.EditorCellModel").children(new String[]{"from", "to", "labelCell"}, new boolean[]{false, false, false}).alias("diagram connector", "").create();
      case 7:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.CellModel_DiagramNode").super_("jetbrains.mps.lang.editor.structure.EditorCellModel").parents("jetbrains.mps.lang.editor.structure.EditorCellModel").children(new String[]{"figure", "ports"}, new boolean[]{false, true}).alias("diagram node", "").create();
      case 8:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.CellModel_DiagramPort").super_("jetbrains.mps.lang.editor.structure.EditorCellModel").parents("jetbrains.mps.lang.editor.structure.EditorCellModel", "jetbrains.mps.editor._diagram.structure.PortDeclaration").alias("diagram port", "").create();
      case 9:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.ConnectionEnd").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"labelCell", "figure"}, new boolean[]{false, false}).abstract_().create();
      case 10:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.ConnectionEndBLQuery").super_("jetbrains.mps.editor._diagram.structure.ConnectionEnd").parents("jetbrains.mps.editor._diagram.structure.ConnectionEnd").children(new String[]{"pointID", "targetNode"}, new boolean[]{false, false}).create();
      case 11:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.DiagramElement").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
      case 12:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.DiagramElementBLQuery").super_("jetbrains.mps.editor._diagram.structure.DiagramElement").parents("jetbrains.mps.editor._diagram.structure.DiagramElement").children(new String[]{"query"}, new boolean[]{false}).create();
      case 13:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.ExternalFigureReference").super_("jetbrains.mps.editor._diagram.structure.AbstractFigureReference").parents("jetbrains.mps.editor._diagram.structure.AbstractFigureReference").references("figure").create();
      case 14:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.ExternalPortSpecification").super_("jetbrains.mps.editor._diagram.structure.PortSpecification").parents("jetbrains.mps.editor._diagram.structure.PortSpecification").children(new String[]{"query"}, new boolean[]{false}).create();
      case 15:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.InplacePortSpecification").super_("jetbrains.mps.editor._diagram.structure.PortSpecification").parents("jetbrains.mps.editor._diagram.structure.PortSpecification", "jetbrains.mps.editor._diagram.structure.PortDeclaration").create();
      case 16:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.PortDeclaration").interface_().children(new String[]{"figure"}, new boolean[]{false}).create();
      case 17:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.PortSpecification").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"isInput"}, new boolean[]{false}).abstract_().create();
      case 18:
        return new ConceptDescriptorBuilder("jetbrains.mps.editor._diagram.structure.ThisEditorNodeExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").alias("this", "").create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"jetbrains.mps.editor._diagram.structure.AbstractArgument", "jetbrains.mps.editor._diagram.structure.AbstractFigureArgument", "jetbrains.mps.editor._diagram.structure.AbstractFigureReference", "jetbrains.mps.editor._diagram.structure.AttributedFigureReference", "jetbrains.mps.editor._diagram.structure.BLQueryArgument", "jetbrains.mps.editor._diagram.structure.CellModel_Diagram", "jetbrains.mps.editor._diagram.structure.CellModel_DiagramConnector", "jetbrains.mps.editor._diagram.structure.CellModel_DiagramNode", "jetbrains.mps.editor._diagram.structure.CellModel_DiagramPort", "jetbrains.mps.editor._diagram.structure.ConnectionEnd", "jetbrains.mps.editor._diagram.structure.ConnectionEndBLQuery", "jetbrains.mps.editor._diagram.structure.DiagramElement", "jetbrains.mps.editor._diagram.structure.DiagramElementBLQuery", "jetbrains.mps.editor._diagram.structure.ExternalFigureReference", "jetbrains.mps.editor._diagram.structure.ExternalPortSpecification", "jetbrains.mps.editor._diagram.structure.InplacePortSpecification", "jetbrains.mps.editor._diagram.structure.PortDeclaration", "jetbrains.mps.editor._diagram.structure.PortSpecification", "jetbrains.mps.editor._diagram.structure.ThisEditorNodeExpression"};
}
