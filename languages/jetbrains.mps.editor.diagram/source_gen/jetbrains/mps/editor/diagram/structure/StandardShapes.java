package jetbrains.mps.editor.diagram.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum StandardShapes {
  rectangle("rectangle", "RECTANGLE"),
  triangle("triangle", "TRIANGLE"),
  ellipse("ellipse", "ELLIPSE");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<StandardShapes> getConstants() {
    List<StandardShapes> list = ListSequence.fromList(new LinkedList<StandardShapes>());
    ListSequence.fromList(list).addElement(StandardShapes.rectangle);
    ListSequence.fromList(list).addElement(StandardShapes.triangle);
    ListSequence.fromList(list).addElement(StandardShapes.ellipse);
    return list;
  }

  public static StandardShapes getDefault() {
    return StandardShapes.rectangle;
  }

  public static StandardShapes parseValue(String value) {
    if (value == null) {
      return StandardShapes.getDefault();
    }
    if (value.equals(StandardShapes.rectangle.getValueAsString())) {
      return StandardShapes.rectangle;
    }
    if (value.equals(StandardShapes.triangle.getValueAsString())) {
      return StandardShapes.triangle;
    }
    if (value.equals(StandardShapes.ellipse.getValueAsString())) {
      return StandardShapes.ellipse;
    }
    return StandardShapes.getDefault();
  }

  private String myValue;

  StandardShapes(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
