package jetbrains.mps.editor.diagram.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SNodePointer;

public class Content_GenericElementQuery_ParameterObject_Constraints extends BaseConstraintsDescriptor {
  public Content_GenericElementQuery_ParameterObject_Constraints() {
    super("jetbrains.mps.editor.diagram.structure.Content_GenericElementQuery_ParameterObject");
  }

  @Override
  public boolean hasOwnCanBeChildMethod() {
    return true;
  }

  @Override
  public boolean canBeChild(@Nullable SNode node, SNode parentNode, SNode link, SNode childConcept, final IOperationContext operationContext, @Nullable final CheckingNodeContext checkingNodeContext) {
    boolean result = static_canBeAChild(node, parentNode, link, childConcept, operationContext);

    if (!(result) && checkingNodeContext != null) {
      checkingNodeContext.setBreakingNode(canBeChildBreakingPoint);
    }

    return result;
  }

  public static boolean static_canBeAChild(SNode node, SNode parentNode, SNode link, SNode childConcept, final IOperationContext operationContext) {
    return (SNodeOperations.getAncestor(parentNode, "jetbrains.mps.editor.diagram.structure.Content_GenericElementQuery", true, false) != null);
  }

  private static SNodePointer canBeChildBreakingPoint = new SNodePointer("r:52332b22-3bbd-40bc-9855-cc730b5beaa9(jetbrains.mps.editor.diagram.constraints)", "8963411245958960756");
}
